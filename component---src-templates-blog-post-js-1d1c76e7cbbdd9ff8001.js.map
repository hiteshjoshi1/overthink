{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/components/Panel.js","webpack:///./src/utils/helpers.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/assets/profile-pic.jpeg","webpack:///./src/components/Bio.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./i18n.js","webpack:///./src/utils/whitelist.js","webpack:///./src/utils/i18n.js","webpack:///./src/templates/blog-post.js"],"names":["SEO","meta","image","title","description","slug","lang","query","render","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","Panel","children","style","fontSize","border","borderRadius","padding","background","wordBreak","formatReadingTime","minutes","cups","Math","round","Array","E","fill","join","formatPostDate","date","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","Bio","display","marginBottom","rhythm","src","profilePic","alt","marginRight","width","height","maxWidth","target","href","React","Component","$export","P","supportedLanguages","en","ru","tr","es","ko","sv","it","id","pl","ja","fr","he","hu","vi","th","my","sk","te","uk","bg","cs","de","nl","nb","fa","ar","sr","codeToLanguage","code","replace","systemFont","Translations","props","translations","languageLink","editUrl","readerTranslations","hasRussianTranslation","indexOf","className","fontFamily","to","map","l","i","Fragment","key","rel","BlogPostTemplate","post","markdownRemark","siteTitle","get","pageContext","previous","next","translatedLinks","fields","langKey","html","matches","match","forEach","whitelist","replaceAnchorLinksByLanguage","link","translatedLink","RegExp","slice","sort","a","b","loadFontsForCode","rawSlug","targetLang","createLanguageLink","enSlug","discussUrl","encodeURIComponent","Layout","location","frontmatter","spoiler","color","scale","marginTop","timeToRead","dangerouslySetInnerHTML","__html","margin","boxShadow","textDecoration","flexWrap","justifyContent","listStyle","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-1d1c76e7cbbdd9ff8001.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s — ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} — A blog by Hitesh Joshi`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('🍱')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","module.exports = __webpack_public_path__ + \"static/profile-pic-110e9eff930edde944df5869dbb61f83.jpeg\";","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpeg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Hitesh Joshi`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 400 }}>\n          Personal thoughts and musings{' '}\n          <a target=\"_blank\" href=\"https://www.linkedin.com/in/hiteshjoshi1/\">\n            Hitesh Joshi\n          </a>\n          . Opinions are my own.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// Please keep keys lowercase!\nexports.supportedLanguages = {\n  en: 'English',\n  ru: 'Русский',\n  tr: 'Türkçe',\n  es: 'Español',\n  ko: '한국어',\n  sv: 'Svenska',\n  it: 'Italiano',\n  id: 'Bahasa Indonesia',\n  'pt-br': 'Português do Brasil',\n  pl: 'Polski',\n  'zh-hant': '繁體中文',\n  'zh-hans': '简体中文',\n  ja: '日本語',\n  fr: 'Français',\n  he: 'עברית',\n  hu: 'Magyar',\n  vi: 'Tiếng Việt',\n  th: 'ไทย',\n  my: 'မြန်မာဘာသာ',\n  sk: 'Slovenčina',\n  te: 'తెలుగు',\n  uk: 'Українська',\n  bg: 'Български',\n  cs: 'Čeština',\n  de: 'Deutsch',\n  nl: 'Nederlands',\n  nb: 'Norsk',\n  fa: 'فارسی',\n  ar: 'العربية',\n  sr: 'srpski',\n};\n","// Please keep keys lowercase!\nexport default {\n  'https://reactjs.org': {\n    'pt-br': 'https://pt-br.reactjs.org',\n    // other languages...\n  },\n  // other links...\n};\n","import { supportedLanguages } from './../../i18n';\nimport whitelist from './whitelist';\n\n// This is kind of a mess for some languages.\n// Try to be as short as possible.\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\n// Some resources:\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n// https://www.w3.org/International/articles/language-tags/\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\n\nexport const codeToLanguage = code =>\n  supportedLanguages[code].replace(/ /g, ' ' /* nbsp */);\n\nexport const loadFontsForCode = code => {\n  switch (code) {\n    case 'ru':\n    case 'bg':\n      import('../fonts/fonts-shared.cyrillic.css');\n      import('../fonts/fonts-post.cyrillic.css');\n      break;\n    case 'uk':\n      import('../fonts/fonts-shared.cyrillic.css');\n      import('../fonts/fonts-post.cyrillic.css');\n      import('../fonts/fonts-shared.latin-ext.css');\n      import('../fonts/fonts-post.latin-ext.css');\n      break;\n    case 'cs':\n    case 'da':\n    case 'de':\n    case 'es':\n    case 'fi':\n    case 'fr':\n    case 'he':\n    case 'hu':\n    case 'it':\n    case 'nl':\n    case 'no':\n    case 'pl':\n    case 'pt-br':\n    case 'sk':\n    case 'sr':\n    case 'sq':\n    case 'sv':\n    case 'tr':\n      import('../fonts/fonts-shared.latin-ext.css');\n      import('../fonts/fonts-post.latin-ext.css');\n      break;\n    case 'vi':\n      import('../fonts/fonts-shared.vietnamese.css');\n      import('../fonts/fonts-post.vietnamese.css');\n      break;\n    case 'fa':\n      import('../fonts/fonts-post.persian.css');\n      break;\n    case 'ar':\n      import('../fonts/fonts-post.arabic.css');\n      break;\n    default:\n      break;\n  }\n};\n\n// TODO: the curried signature is weird.\nexport const createLanguageLink = (slug, lang) => {\n  const rawSlug = slug.replace(`${lang}/`, '');\n\n  return targetLang =>\n    targetLang === 'en' ? rawSlug : `${targetLang}${rawSlug}`;\n};\n\nexport const replaceAnchorLinksByLanguage = (html, code) => {\n  // Match any link using https://regexr.com/4airl\n  const matches = html.match(/https?:\\/\\/(www)?[^\\/\\s)\"?]+/gm);\n\n  // Return same html if no matches were found\n  // or code isn't supported\n  if (!matches || !supportedLanguages[code]) {\n    return html;\n  }\n\n  matches.forEach(url => {\n    // Replace to locale url if and only if exists in whitelist\n    // and has code registered\n    if (whitelist[url] && whitelist[url][code]) {\n      html = html.replace(url, whitelist[url][code]);\n    }\n  });\n\n  return html;\n};\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n// import Signup from '../components/Signup';\nimport Panel from '../components/Panel';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n  replaceAnchorLinksByLanguage,\n} from '../utils/i18n';\n\nconst GITHUB_USERNAME = 'hiteshjoshi1';\nconst GITHUB_REPO_NAME = 'overthink';\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nclass Translations extends React.Component {\n  render() {\n    let { translations, lang, languageLink, editUrl } = this.props;\n\n    let readerTranslations = translations.filter(lang => lang !== 'ru');\n    let hasRussianTranslation = translations.indexOf('ru') !== -1;\n\n    return (\n      <div className=\"translations\">\n        <Panel style={{ fontFamily: systemFont }}>\n          {translations.length > 0 && (\n            <span>\n              {hasRussianTranslation && (\n                <span>\n                  Originally written in:{' '}\n                  {'en' === lang ? (\n                    <b>{codeToLanguage('en')}</b>\n                  ) : (\n                    <Link to={languageLink('en')}>English</Link>\n                  )}\n                  {' • '}\n                  {'ru' === lang ? (\n                    <b>Русский (авторский перевод)</b>\n                  ) : (\n                    <Link to={languageLink('ru')}>\n                      Русский (авторский перевод)\n                    </Link>\n                  )}\n                  <br />\n                  <br />\n                </span>\n              )}\n              <span>Translated by readers into: </span>\n              {readerTranslations.map((l, i) => (\n                <React.Fragment key={l}>\n                  {l === lang ? (\n                    <b>{codeToLanguage(l)}</b>\n                  ) : (\n                    <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>\n                  )}\n                  {i === readerTranslations.length - 1 ? '' : ' • '}\n                </React.Fragment>\n              ))}\n            </span>\n          )}\n          {lang !== 'en' && (\n            <>\n              <br />\n              <br />\n              {lang !== 'ru' && (\n                <>\n                  <Link to={languageLink('en')}>Read the original</Link>\n                  {' • '}\n                  <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Improve this translation\n                  </a>\n                  {' • '}\n                </>\n              )}\n              <Link to={`/${lang}`}>View all translated posts</Link>{' '}\n            </>\n          )}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    let {\n      previous,\n      next,\n      slug,\n      translations,\n      translatedLinks,\n    } = this.props.pageContext;\n    const lang = post.fields.langKey;\n\n    // Replace original links with translated when available.\n    let html = post.html;\n\n    // Replace original anchor links by lang when available in whitelist\n    // see utils/whitelist.js\n    html = replaceAnchorLinksByLanguage(html, lang);\n\n    translatedLinks.forEach(link => {\n      // jeez\n      function escapeRegExp(str) {\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      }\n      let translatedLink = '/' + lang + link;\n      html = html.replace(\n        new RegExp('\"' + escapeRegExp(link) + '\"', 'g'),\n        '\"' + translatedLink + '\"'\n      );\n    });\n\n    translations = translations.slice();\n    translations.sort((a, b) => {\n      return codeToLanguage(a) < codeToLanguage(b) ? -1 : 1;\n    });\n\n    loadFontsForCode(lang);\n    // TODO: this curried function is annoying\n    const languageLink = createLanguageLink(slug, lang);\n    const enSlug = languageLink('en');\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${enSlug.slice(\n      1,\n      enSlug.length - 1\n    )}/index${lang === 'en' ? '' : '.' + lang}.md`;\n    const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n      `https://overreacted.io${enSlug}`\n    )}`;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <main>\n          <article>\n            <header>\n              <h1 style={{ color: 'var(--textTitle)' }}>\n                {post.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: 'block',\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date, lang)}\n                {` • ${formatReadingTime(post.timeToRead)}`}\n              </p>\n              {translations.length > 0 && (\n                <Translations\n                  translations={translations}\n                  editUrl={editUrl}\n                  languageLink={languageLink}\n                  lang={lang}\n                />\n              )}\n            </header>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n            <footer>\n              <p>\n                <a href={discussUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Discuss on Twitter\n                </a>\n                {` • `}\n                <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Edit on GitHub\n                </a>\n              </p>\n            </footer>\n          </article>\n        </main>\n        <aside>\n          <div\n            style={{\n              margin: '90px 0 40px 0',\n              fontFamily: systemFont,\n            }}\n          >\n            {/* <Signup cta={post.frontmatter.cta} /> */}\n          </div>\n          <h3\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: rhythm(0.25),\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--pink)',\n              }}\n              to={'/'}\n            >\n              Overthink\n            </Link>\n          </h3>\n          <Bio />\n          <nav>\n            <ul\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                listStyle: 'none',\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={previous.fields.slug}\n                    rel=\"prev\"\n                    style={{ marginRight: 20 }}\n                  >\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}